)]}'
{"version":3,"sources":["tsega:bootstrap3-datetimepicker/lib/js/bootstrap3-datetimepicker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,E;AACA,mB;AACA,yD;AACA,2B;AACA,oD;AACA,yD;AACA,qB;;AAEA,oC;;AAEA,4E;AACA,6E;AACA,4E;AACA,yE;AACA,qE;AACA,wD;;AAEA,0E;AACA,mD;;AAEA,0E;AACA,wE;AACA,2E;AACA,sE;AACA,6E;AACA,yE;AACA,a;AACA,E;;AAEA,4B;AACA,iB;AACA,qD;AACA,yD;AACA,8C;AACA,6C;AACA,sD;AACA,K;AACA,U;AACA,8D;AACA,sB;AACA,2F;AACA,S;AACA,sB;AACA,8F;AACA,S;AACA,qC;AACA,K;AACA,8B;AACA,iB;AACA,wC;AACA,gD;AACA,K;;AAEA,kB;;AAEA,kD;AACA,oD;;AAEA,qB;AACA,iD;AACA,qD;AACA,qD;AACA,wD;AACA,c;;AAEA,0B;AACA,4B;AACA,kB;;AAEA,4B;AACA,oD;AACA,6D;AACA,6E;;AAEA,wC;;AAEA,4B;;AAEA,wE;AACA,mE;AACA,a;;AAEA,gC;AACA,mD;AACA,mC;AACA,iC;AACA,wD;AACA,qC;;AAEA,yD;AACA,0I;AACA,sF;AACA,iB;AACA,sB;AACA,gF;AACA,iB;AACA,a;AACA,kD;;AAEA,+C;;AAEA,iC;AACA,gG;AACA,yE;AACA,yC;AACA,iB;AACA,kG;AACA,gD;AACA,+E;AACA,+E;AACA,qB;AACA,0B;AACA,+C;AACA,qB;AACA,iB;AACA,a;AACA,iH;;AAEA,mC;AACA,qD;AACA,a;;AAEA,0C;AACA,2B;AACA,6D;AACA,iB;AACA,a;AACA,0C;AACA,2B;AACA,gE;AACA,6D;AACA,iB;AACA,a;;AAEA,yC;AACA,iG;AACA,6D;AACA,kE;AACA,4B;AACA,uB;;AAEA,mF;;AAEA,iE;AACA,yD;AACA,6C;AACA,kC;AACA,+C;AACA,8B;AACA,iC;AACA,+C;AACA,8B;AACA,4B;AACA,+C;AACA,8B;AACA,iB;AACA,a;AACA,2D;AACA,sD;AACA,0C;AACA,kC;AACA,4C;AACA,8B;AACA,iC;AACA,4C;AACA,8B;AACA,4B;AACA,4C;AACA,8B;AACA,iB;AACA,a;;AAEA,4E;;AAEA,yF;AACA,uF;;AAEA,mD;AACA,sD;AACA,sD;AACA,sB;AACA,yB;AACA,wB;AACA,0B;AACA,0B;AACA,qB;AACA,uB;AACA,qD;AACA,yC;AACA,a;AACA,qF;AACA,4D;AACA,a;AACA,sD;AACA,0D;AACA,iH;AACA,a;AACA,U;;AAEA,sC;AACA,sB;;AAEA,iC;AACA,sC;AACA,a;AACA,4D;AACA,qC;AACA,qD;AACA,a;AACA,0C;AACA,sG;AACA,a;AACA,yB;AACA,U;;AAEA,qC;AACA,sB;AACA,6C;AACA,8C;AACA,a;AACA,kB;AACA,4D;AACA,a;AACA,iD;AACA,yD;AACA,a;AACA,mD;AACA,6D;AACA,a;AACA,mD;AACA,6D;AACA,a;AACA,qD;AACA,iE;AACA,a;AACA,qD;AACA,iE;AACA,a;AACA,qD;AACA,iE;AACA,a;AACA,oD;AACA,mE;AACA,a;AACA,yD;AACA,yE;AACA,a;AACA,kD;AACA,2D;AACA,a;AACA,kD;AACA,2D;AACA,a;AACA,oD;AACA,+D;AACA,a;AACA,mD;AACA,6D;AACA,a;AACA,mD;AACA,6D;AACA,a;AACA,sD;AACA,mE;AACA,a;AACA,wD;AACA,uE;AACA,a;AACA,uD;AACA,qE;AACA,a;AACA,gD;AACA,uD;AACA,a;AACA,oD;AACA,+D;AACA,a;AACA,oD;AACA,+D;AACA,a;AACA,qD;AACA,iE;AACA,a;AACA,6D;AACA,iF;AACA,a;AACA,U;;AAEA,6B;AACA,sC;AACA,gG;AACA,oC;AACA,8B;;AAEA,0G;AACA,mE;;AAEA,oD;AACA,sC;AACA,+D;AACA,yC;AACA,6D;AACA,yK;AACA,0C;AACA,wB;AACA,6C;AACA,iB;AACA,a;AACA,0C;AACA,iG;AACA,oE;AACA,oB;AACA,gC;AACA,oE;AACA,a;;AAEA,qD;AACA,0D;AACA,a;;AAEA,wD;AACA,wD;AACA,uE;AACA,a;;AAEA,8B;AACA,mC;AACA,kD;AACA,oD;AACA,a;;AAEA,6E;AACA,4E;AACA,qC;AACA,qD;AACA,oB;AACA,sC;AACA,wD;AACA,a;;AAEA,0C;AACA,mC;AACA,uC;AACA,0C;AACA,gC;AACA,sC;AACA,uC;AACA,mB;AACA,oB;AACA,mC;AACA,uC;AACA,oC;AACA,mC;AACA,sC;AACA,uC;AACA,mB;AACA,a;AACA,U;;AAEA,sD;AACA,0E;AACA,uB;AACA,a;AACA,4B;AACA,oC;AACA,kC;AACA,0C;AACA,wC;AACA,e;;AAEA,yC;AACA,wC;AACA,a;AACA,U;;AAEA,uC;AACA,2B;AACA,oC;AACA,iC;AACA,2E;AACA,e;AACA,U;;AAEA,qC;AACA,mD;AACA,kC;AACA,2B;AACA,iD;AACA,8B;AACA,2F;AACA,iB;AACA,mC;AACA,2C;AACA,iB;AACA,a;AACA,mE;AACA,uB;AACA,uB;AACA,U;;AAEA,+B;AACA,mD;AACA,wE;AACA,wD;AACA,qD;AACA,a;AACA,4E;AACA,yC;AACA,+E;AACA,iB;AACA,oB;AACA,yC;AACA,kC;AACA,mF;AACA,4B;AACA,mF;AACA,qB;AACA,iB;AACA,a;AACA,sE;AACA,U;;AAEA,kC;AACA,mD;AACA,iE;AACA,sC;AACA,4E;AACA,a;AACA,qE;AACA,U;;AAEA,gC;AACA,2C;AACA,uB;AACA,a;AACA,mD;AACA,8C;AACA,gD;AACA,0D;AACA,4D;AACA,wD;AACA,0D;AACA,4B;AACA,wH;;AAEA,6F;AACA,+F;AACA,8F;;AAEA,iE;AACA,4C;;AAEA,+G;AACA,2C;AACA,iD;AACA,kF;AACA,qF;AACA,a;AACA,4E;AACA,qF;AACA,a;;AAEA,uD;AACA,mD;AACA,iF;AACA,oC;AACA,mC;AACA,gE;AACA,mF;AACA,qB;AACA,iB;AACA,6B;AACA,0G;AACA,sC;AACA,iH;AACA,sC;AACA,iB;AACA,uH;AACA,yC;AACA,iB;AACA,wF;AACA,2C;AACA,iB;AACA,wD;AACA,4D;AACA,4C;AACA,qB;AACA,iB;AACA,wD;AACA,oF;AACA,uF;AACA,mD;AACA,kC;AACA,yB;AACA,qB;AACA,iB;AACA,2F;;AAEA,+C;AACA,sC;;AAEA,uD;AACA,0C;AACA,iB;AACA,a;AACA,8E;AACA,6C;AACA,mI;AACA,uC;AACA,kE;AACA,a;AACA,uC;AACA,uF;AACA,a;AACA,qC;AACA,uF;AACA,a;AACA,sC;AACA,mF;AACA,sD;AACA,oF;AACA,sD;AACA,iB;AACA,a;;AAEA,sB;AACA,gD;AACA,oE;AACA,sF;AACA,uF;AACA,mC;AACA,8F;AACA,a;AACA,qC;AACA,8F;AACA,a;AACA,sB;AACA,uC;AACA,mN;AACA,0B;AACA,a;AACA,gC;AACA,U;;AAEA,iC;AACA,mD;AACA,4G;AACA,kC;AACA,oC;AACA,4B;AACA,4C;AACA,mC;AACA,gD;AACA,4F;AACA,kC;AACA,qB;AACA,oC;AACA,iB;AACA,a;AACA,kB;AACA,4B;AACA,4C;AACA,mC;AACA,gD;AACA,4F;AACA,kC;AACA,qB;AACA,oC;AACA,iB;AACA,a;AACA,6B;AACA,U;;AAEA,mC;AACA,wJ;AACA,kC;AACA,8B;AACA,yB;AACA,a;AACA,6D;AACA,+B;AACA,4C;AACA,uC;AACA,8F;AACA,wC;AACA,4B;AACA,4C;AACA,qB;AACA,iB;AACA,gC;AACA,a;AACA,6B;AACA,U;;AAEA,mC;AACA,kH;AACA,kC;AACA,qC;AACA,+B;AACA,4C;AACA,0F;AACA,iC;AACA,iB;AACA,gC;AACA,a;AACA,6B;AACA,U;;AAEA,gC;AACA,+B;AACA,uB;AACA,a;AACA,6F;AACA,2C;AACA,iD;AACA,qC;AACA,iC;AACA,8B;AACA,yC;AACA,qC;AACA,iB;AACA,0F;AACA,a;AACA,qF;AACA,wG;AACA,uG;AACA,U;;AAEA,8B;AACA,gC;AACA,+B;AACA,iC;AACA,oH;AACA,sC;AACA,8C;AACA,+D;AACA,kC;AACA,0D;AACA,qD;AACA,gD;AACA,0C;AACA,4C;AACA,4C;AACA,mF;AACA,yE;AACA,yD;AACA,qC;AACA,sG;AACA,+C;AACA,0C;AACA,6B;AACA,kC;AACA,oC;AACA,sD;AACA,mF;AACA,6D;AACA,oC;AACA,wE;AACA,2D;AACA,6B;AACA,yE;AACA,sD;AACA,8D;AACA,+D;AACA,8D;AACA,2D;AACA,6D;AACA,4D;AACA,mC;AACA,sC;AACA,8D;AACA,6B;AACA,yC;AACA,uC;AACA,kC;AACA,kC;AACA,oD;AACA,uE;AACA,gE;AACA,8D;AACA,wD;AACA,sD;AACA,mD;AACA,kD;AACA,4C;AACA,mD;AACA,qC;AACA,+D;AACA,uD;AACA,kD;AACA,kD;AACA,4C;AACA,mD;AACA,qC;AACA,iC;AACA,sD;AACA,4C;AACA,6C;AACA,2C;AACA,2D;AACA,6D;AACA,4D;AACA,iC;AACA,kC;AACA,0D;AACA,2E;AACA,mC;AACA,2C;AACA,sC;AACA,8D;AACA,6B;AACA,kC;AACA,qB;AACA,iB;AACA,a;AACA,U;;AAEA,mB;AACA,yC;AACA,6C;AACA,c;;AAEA,2C;AACA,2E;AACA,c;;AAEA,2C;AACA,+C;AACA,c;;AAEA,yC;AACA,kD;AACA,c;;AAEA,2C;AACA,gF;AACA,c;;AAEA,2C;AACA,oD;AACA,c;;AAEA,uC;AACA,+C;AACA,iC;AACA,+B;AACA,wB;AACA,+B;AACA,iB;AACA,wC;AACA,c;;AAEA,qC;AACA,uF;AACA,4E;AACA,c;;AAEA,oC;AACA,4E;AACA,2E;AACA,c;;AAEA,sC;AACA,4E;AACA,6E;AACA,c;;AAEA,sC;AACA,4E;AACA,6E;AACA,c;;AAEA,sC;AACA,4D;AACA,yC;AACA,oD;AACA,0C;AACA,uC;AACA,yB;AACA,4B;AACA,0C;AACA,qC;AACA,yB;AACA,qB;AACA,iB;AACA,wC;AACA,gD;AACA,c;;AAEA,wC;AACA,sE;AACA,gD;AACA,c;;AAEA,wC;AACA,sE;AACA,gD;AACA,a;AACA,U;;AAEA,iC;AACA,8C;AACA,2D;AACA,8D;AACA,yB;AACA,+B;AACA,gD;AACA,a;AACA,kB;AACA,uB;AACA,0C;AACA,sB;AACA,U;;AAEA,kC;AACA,gC;AACA,+B;AACA,U;;AAEA,gC;AACA,kE;AACA,8B;AACA,a;AACA,U;;AAEA,+B;AACA,mD;AACA,2I;AACA,8F;AACA,yB;AACA,yC;AACA,8C;AACA,sB;AACA,a;AACA,kB;AACA,0C;AACA,oC;AACA,8C;AACA,qC;AACA,a;AACA,U;;AAEA,mC;AACA,sB;AACA,mG;AACA,a;AACA,mI;AACA,U;;AAEA,8C;AACA,+D;AACA,gH;AACA,mH;AACA,oE;AACA,iE;AACA,qE;AACA,0F;AACA,wC;AACA,oC;AACA,kD;AACA,mD;AACA,gE;;AAEA,sD;AACA,iE;AACA,yE;AACA,mC;AACA,yB;AACA,kD;AACA,gD;AACA,oH;AACA,+C;AACA,mI;AACA,yB;AACA,qB;AACA,mB;AACA,a;AACA,iC;AACA,mC;AACA,wD;AACA,wD;AACA,oD;AACA,sD;AACA,mB;AACA,oB;AACA,mC;AACA,mD;AACA,4B;AACA,uC;AACA,6E;AACA,+E;AACA,wB;AACA,2E;AACA,iB;AACA,a;AACA,U;;AAEA,oD;AACA,yB;AACA,2E;AACA,kC;AACA,+B;AACA,wF;AACA,a;AACA,U;;AAEA,8C;AACA,sE;AACA,wD;AACA,6D;AACA,qE;AACA,wD;AACA,a;AACA,iC;AACA,oC;AACA,yC;AACA,qC;AACA,yC;AACA,wC;AACA,mB;AACA,oB;AACA,oC;AACA,oC;AACA,4B;AACA,uC;AACA,+D;AACA,wE;AACA,wB;AACA,6D;AACA,iB;AACA,a;AACA,U;;AAEA,oD;AACA,+D;AACA,kC;AACA,wE;AACA,a;AACA,U;;AAEA,iC;AACA,iC;AACA,2E;AACA,sD;AACA,oE;AACA,uC;AACA,8B;AACA,qB;AACA,iB;AACA,+B;AACA,oB;AACA,6B;AACA,a;AACA,U;;AAEA,2B;AACA,mD;AACA,+B;AACA,gC;AACA,sE;AACA,a;AACA,4C;AACA,mD;AACA,2C;AACA,8B;AACA,a;AACA,U;;AAEA,wD;AACA,mD;AACA,wB;AACA,sC;AACA,8C;AACA,6C;AACA,8C;AACA,iB;AACA,0C;AACA,a;AACA,kB;AACA,qE;AACA,a;AACA,wG;AACA,2D;AACA,uB;AACA,a;;AAEA,sC;AACA,8C;AACA,a;AACA,kB;AACA,mD;AACA,a;AACA,iC;AACA,U;;AAEA,sD;AACA,mD;AACA,kG;AACA,kG;;AAEA,2B;AACA,kD;AACA,oD;AACA,a;;AAEA,kE;AACA,4B;AACA,a;AACA,yD;AACA,6B;AACA,a;AACA,oF;AACA,U;AACA,2C;AACA,mD;AACA,wD;AACA,4B;AACA,a;AACA,mF;AACA,U;;AAEA,sD;AACA,kE;AACA,yG;AACA,gF;;AAEA,gD;AACA,+D;AACA,0D;AACA,gG;AACA,uD;AACA,wB;AACA,gG;AACA,iB;AACA,sC;AACA,yE;AACA,sC;AACA,iB;AACA,a;AACA,sC;AACA,yC;AACA,a;AACA,yB;AACA,U;;AAEA,qC;AACA,uC;AACA,qC;AACA,8B;AACA,a;AACA,gC;AACA,U;;AAEA,mC;AACA,e;AACA,8B;AACA,mC;AACA,oC;AACA,4L;AACA,qC;AACA,mC;AACA,8B;AACA,yH;AACA,4D;AACA,kG;AACA,0B;AACA,mD;AACA,kG;AACA,0B;AACA,kD;AACA,kG;AACA,yB;AACA,yB;AACA,qE;AACA,+N;AACA,gD;AACA,gD;AACA,kF;AACA,gG;AACA,8B;AACA,wB;AACA,yD;AACA,+F;AACA,8E;AACA,iC;AACA,yK;AACA,4F;AACA,4F;AACA,iC;AACA,2B;AACA,iB;AACA,gC;AACA,2B;AACA,a;AACA,0C;AACA,wB;AACA,mF;AACA,wF;AACA,4B;AACA,kB;AACA,a;AACA,oB;AACA,+E;AACA,sE;AACA,wB;AACA,c;AACA,U;;AAEA,oB;AACA,oB;AACA,iB;AACA,oC;AACA,oC;AACA,8B;AACA,kB;AACA,iB;AACA,sC;AACA,mC;AACA,8B;AACA,kB;AACA,iB;AACA,qC;AACA,mC;AACA,+B;AACA,iB;AACA,a;AACA,U;;AAEA,oB;AACA,0H;AACA,8H;AACA,8H;AACA,U;;AAEA,4C;AACA,oB;AACA,mD;AACA,uD;AACA,gC;AACA,uJ;AACA,2D;AACA,sM;AACA,wD;AACA,8L;AACA,sF;AACA,iC;AACA,gC;AACA,uE;AACA,4D;AACA,qJ;AACA,wD;AACA,8G;AACA,qF;AACA,4H;AACA,iC;AACA,gC;AACA,yJ;AACA,2D;AACA,wM;AACA,wD;AACA,gM;AACA,sF;AACA,iC;AACA,gC;AACA,0B;AACA,2E;AACA,+D;AACA,0B;AACA,+E;AACA,+D;AACA,0B;AACA,4C;AACA,oI;AACA,c;AACA,U;;AAEA,sC;AACA,qC;AACA,2C;AACA,mC;AACA,wD;AACA,mC;AACA,8D;AACA,a;AACA,U;;AAEA,oC;AACA,oD;AACA,uB;AACA,a;AACA,4C;AACA,oD;AACA,8D;AACA,6C;AACA,kE;AACA,6G;AACA,qE;AACA,4B;AACA,wE;AACA,qB;AACA,6C;AACA,iB;AACA,a;AACA,mG;AACA,qG;AACA,uB;AACA,a;AACA,wD;AACA,qC;AACA,yD;AACA,a;AACA,kB;AACA,qC;AACA,sD;AACA,a;AACA,6G;AACA,oB;AACA,oC;AACA,gC;AACA,yC;AACA,e;AACA,2C;AACA,oB;AACA,6B;AACA,a;AACA,U;;AAEA,sC;AACA,yC;AACA,yC;AACA,uB;AACA,a;AACA,yC;AACA,qC;AACA,U;;AAEA,qC;AACA,yC;AACA,0C;AACA,uB;AACA,a;AACA,0C;AACA,qC;AACA,U;;AAEA,mC;AACA,mE;AACA,4E;AACA,mD;AACA,+D;AACA,iE;AACA,2B;AACA,iB;AACA,a;AACA,iC;AACA,qD;AACA,mD;AACA,uB;AACA,oC;AACA,gC;AACA,yC;AACA,e;AACA,2C;AACA,U;;AAEA,8C;AACA,mD;AACA,2B;AACA,oC;AACA,sB;AACA,oB;AACA,qC;AACA,a;AACA,4C;AACA,iI;AACA,oB;AACA,kE;AACA,a;AACA,oC;AACA,sC;AACA,sB;AACA,0F;AACA,2B;AACA,2B;AACA,a;AACA,kB;AACA,qC;AACA,a;AACA,U;;AAEA,sC;AACA,+B;AACA,4B;AACA,a;AACA,uC;AACA,U;;AAEA,0C;AACA,8C;AACA,wB;AACA,sC;AACA,oB;AACA,sC;AACA,a;AACA,8C;AACA,U;;AAEA,oD;AACA,kE;AACA,kC;AACA,yB;AACA,a;AACA,U;;AAEA,mD;AACA,iE;AACA,kC;AACA,yB;AACA,a;AACA,U;;AAEA,6C;AACA,qC;AACA,uB;AACA,a;AACA,gE;AACA,sD;AACA,oB;AACA,+F;AACA,a;AACA,kC;AACA,yB;AACA,a;AACA,U;;AAEA,6C;AACA,qC;AACA,uB;AACA,a;AACA,gE;AACA,sD;AACA,oB;AACA,+F;AACA,a;AACA,kC;AACA,yB;AACA,a;AACA,U;;AAEA,e;AACA,M;;AAEA,8C;AACA,sC;AACA,gC;AACA,oD;AACA,wB;AACA,gF;AACA,a;AACA,W;AACA,M;;AAEA,oC;AACA,sB;AACA,uB;AACA,uB;AACA,yB;AACA,0B;AACA,yB;AACA,6B;AACA,0B;AACA,mC;AACA,wC;AACA,wB;AACA,uB;AACA,kC;AACA,wB;AACA,6B;AACA,4B;AACA,kB;AACA,yB;AACA,0B;AACA,0B;AACA,+B;AACA,2B;AACA,M;AACA,I","file":"/packages/tsega:bootstrap3-datetimepicker.js","sourcesContent":["/*\n//! version : 3.1.3\n=========================================================\nbootstrap-datetimepicker.js\nhttps://github.com/Eonasdan/bootstrap-datetimepicker\n=========================================================\nThe MIT License (MIT)\n\nCopyright (c) 2014 Jonathan Peterson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n;(function (root, factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD is used - Register as an anonymous module.\n        define(['jquery', 'moment'], factory);\n    } else if (typeof exports === 'object') {\n        factory(require('jquery'), require('moment'));\n    }\n    else {\n        // Neither AMD or CommonJS used. Use global variables.\n        if (!jQuery) {\n            throw new Error('bootstrap-datetimepicker requires jQuery to be loaded first');\n        }\n        if (!moment) {\n            throw new Error('bootstrap-datetimepicker requires moment.js to be loaded first');\n        }\n        factory(root.jQuery, moment);\n    }\n}(this, function ($, moment) {\n    'use strict';\n    if (typeof moment === 'undefined') {\n        throw new Error('momentjs is required');\n    }\n\n    var dpgId = 0,\n\n    DateTimePicker = function (element, options) {\n        var defaults = $.fn.datetimepicker.defaults,\n\n            icons = {\n                time: 'glyphicon glyphicon-time',\n                date: 'glyphicon glyphicon-calendar',\n                up: 'glyphicon glyphicon-chevron-up',\n                down: 'glyphicon glyphicon-chevron-down'\n            },\n\n            picker = this,\n            errored = false,\n            dDate,\n\n        init = function () {\n            var icon = false, localeData, rInterval;\n            picker.options = $.extend({}, defaults, options);\n            picker.options.icons = $.extend({}, icons, picker.options.icons);\n\n            picker.element = $(element);\n\n            dataToOptions();\n\n            if (!(picker.options.pickTime || picker.options.pickDate)) {\n                throw new Error('Must choose at least one picker');\n            }\n\n            picker.id = dpgId++;\n            moment.locale(picker.options.language);\n            picker.date = moment();\n            picker.unset = false;\n            picker.isInput = picker.element.is('input');\n            picker.component = false;\n\n            if (picker.element.hasClass('input-group')) {\n                if (picker.element.find('.datepickerbutton').size() === 0) {//in case there is more then one 'input-group-addon' Issue #48\n                    picker.component = picker.element.find('[class^=\"input-group-\"]');\n                }\n                else {\n                    picker.component = picker.element.find('.datepickerbutton');\n                }\n            }\n            picker.format = picker.options.format;\n\n            localeData = moment().localeData();\n\n            if (!picker.format) {\n                picker.format = (picker.options.pickDate ? localeData.longDateFormat('L') : '');\n                if (picker.options.pickDate && picker.options.pickTime) {\n                    picker.format += ' ';\n                }\n                picker.format += (picker.options.pickTime ? localeData.longDateFormat('LT') : '');\n                if (picker.options.useSeconds) {\n                    if (localeData.longDateFormat('LT').indexOf(' A') !== -1) {\n                        picker.format = picker.format.split(' A')[0] + ':ss A';\n                    }\n                    else {\n                        picker.format += ':ss';\n                    }\n                }\n            }\n            picker.use24hours = (picker.format.toLowerCase().indexOf('a') < 0 && picker.format.indexOf('h') < 0);\n\n            if (picker.component) {\n                icon = picker.component.find('span');\n            }\n\n            if (picker.options.pickTime) {\n                if (icon) {\n                    icon.addClass(picker.options.icons.time);\n                }\n            }\n            if (picker.options.pickDate) {\n                if (icon) {\n                    icon.removeClass(picker.options.icons.time);\n                    icon.addClass(picker.options.icons.date);\n                }\n            }\n\n            picker.options.widgetParent =\n                typeof picker.options.widgetParent === 'string' && picker.options.widgetParent ||\n                picker.element.parents().filter(function () {\n                    return 'scroll' === $(this).css('overflow-y');\n                }).get(0) ||\n                'body';\n\n            picker.widget = $(getTemplate()).appendTo(picker.options.widgetParent);\n\n            picker.minViewMode = picker.options.minViewMode || 0;\n            if (typeof picker.minViewMode === 'string') {\n                switch (picker.minViewMode) {\n                    case 'months':\n                        picker.minViewMode = 1;\n                        break;\n                    case 'years':\n                        picker.minViewMode = 2;\n                        break;\n                    default:\n                        picker.minViewMode = 0;\n                        break;\n                }\n            }\n            picker.viewMode = picker.options.viewMode || 0;\n            if (typeof picker.viewMode === 'string') {\n                switch (picker.viewMode) {\n                    case 'months':\n                        picker.viewMode = 1;\n                        break;\n                    case 'years':\n                        picker.viewMode = 2;\n                        break;\n                    default:\n                        picker.viewMode = 0;\n                        break;\n                }\n            }\n\n            picker.viewMode = Math.max(picker.viewMode, picker.minViewMode);\n\n            picker.options.disabledDates = indexGivenDates(picker.options.disabledDates);\n            picker.options.enabledDates = indexGivenDates(picker.options.enabledDates);\n\n            picker.startViewMode = picker.viewMode;\n            picker.setMinDate(picker.options.minDate);\n            picker.setMaxDate(picker.options.maxDate);\n            fillDow();\n            fillMonths();\n            fillHours();\n            fillMinutes();\n            fillSeconds();\n            update();\n            showMode();\n            if (!getPickerInput().prop('disabled')) {\n                attachDatePickerEvents();\n            }\n            if (picker.options.defaultDate !== '' && getPickerInput().val() === '') {\n                picker.setValue(picker.options.defaultDate);\n            }\n            if (picker.options.minuteStepping !== 1) {\n                rInterval = picker.options.minuteStepping;\n                picker.date.minutes((Math.round(picker.date.minutes() / rInterval) * rInterval) % 60).seconds(0);\n            }\n        },\n\n        getPickerInput = function () {\n            var input;\n\n            if (picker.isInput) {\n                return picker.element;\n            }\n            input = picker.element.find('.datepickerinput');\n            if (input.size() === 0) {\n                input = picker.element.find('input');\n            }\n            else if (!input.is('input')) {\n                throw new Error('CSS class \"datepickerinput\" cannot be applied to non input element');\n            }\n            return input;\n        },\n\n        dataToOptions = function () {\n            var eData;\n            if (picker.element.is('input')) {\n                eData = picker.element.data();\n            }\n            else {\n                eData = picker.element.find('input').data();\n            }\n            if (eData.dateFormat !== undefined) {\n                picker.options.format = eData.dateFormat;\n            }\n            if (eData.datePickdate !== undefined) {\n                picker.options.pickDate = eData.datePickdate;\n            }\n            if (eData.datePicktime !== undefined) {\n                picker.options.pickTime = eData.datePicktime;\n            }\n            if (eData.dateUseminutes !== undefined) {\n                picker.options.useMinutes = eData.dateUseminutes;\n            }\n            if (eData.dateUseseconds !== undefined) {\n                picker.options.useSeconds = eData.dateUseseconds;\n            }\n            if (eData.dateUsecurrent !== undefined) {\n                picker.options.useCurrent = eData.dateUsecurrent;\n            }\n            if (eData.calendarWeeks !== undefined) {\n                picker.options.calendarWeeks = eData.calendarWeeks;\n            }\n            if (eData.dateMinutestepping !== undefined) {\n                picker.options.minuteStepping = eData.dateMinutestepping;\n            }\n            if (eData.dateMindate !== undefined) {\n                picker.options.minDate = eData.dateMindate;\n            }\n            if (eData.dateMaxdate !== undefined) {\n                picker.options.maxDate = eData.dateMaxdate;\n            }\n            if (eData.dateShowtoday !== undefined) {\n                picker.options.showToday = eData.dateShowtoday;\n            }\n            if (eData.dateCollapse !== undefined) {\n                picker.options.collapse = eData.dateCollapse;\n            }\n            if (eData.dateLanguage !== undefined) {\n                picker.options.language = eData.dateLanguage;\n            }\n            if (eData.dateDefaultdate !== undefined) {\n                picker.options.defaultDate = eData.dateDefaultdate;\n            }\n            if (eData.dateDisableddates !== undefined) {\n                picker.options.disabledDates = eData.dateDisableddates;\n            }\n            if (eData.dateEnableddates !== undefined) {\n                picker.options.enabledDates = eData.dateEnableddates;\n            }\n            if (eData.dateIcons !== undefined) {\n                picker.options.icons = eData.dateIcons;\n            }\n            if (eData.dateUsestrict !== undefined) {\n                picker.options.useStrict = eData.dateUsestrict;\n            }\n            if (eData.dateDirection !== undefined) {\n                picker.options.direction = eData.dateDirection;\n            }\n            if (eData.dateSidebyside !== undefined) {\n                picker.options.sideBySide = eData.dateSidebyside;\n            }\n            if (eData.dateDaysofweekdisabled !== undefined) {\n                picker.options.daysOfWeekDisabled = eData.dateDaysofweekdisabled;\n            }\n        },\n\n        place = function () {\n            var position = 'absolute',\n                offset = picker.component ? picker.component.offset() : picker.element.offset(),\n                $window = $(window),\n                placePosition;\n\n            picker.width = picker.component ? picker.component.outerWidth() : picker.element.outerWidth();\n            offset.top = offset.top + picker.element.outerHeight();\n\n            if (picker.options.direction === 'up') {\n                placePosition = 'top';\n            } else if (picker.options.direction === 'bottom') {\n                placePosition = 'bottom';\n            } else if (picker.options.direction === 'auto') {\n                if (offset.top + picker.widget.height() > $window.height() + $window.scrollTop() && picker.widget.height() + picker.element.outerHeight() < offset.top) {\n                    placePosition = 'top';\n                } else {\n                    placePosition = 'bottom';\n                }\n            }\n            if (placePosition === 'top') {\n                offset.bottom = $window.height() - offset.top + picker.element.outerHeight() + 3;\n                picker.widget.addClass('top').removeClass('bottom');\n            } else {\n                offset.top += 1;\n                picker.widget.addClass('bottom').removeClass('top');\n            }\n\n            if (picker.options.width !== undefined) {\n                picker.widget.width(picker.options.width);\n            }\n\n            if (picker.options.orientation === 'left') {\n                picker.widget.addClass('left-oriented');\n                offset.left = offset.left - picker.widget.width() + 20;\n            }\n\n            if (isInFixed()) {\n                position = 'fixed';\n                offset.top -= $window.scrollTop();\n                offset.left -= $window.scrollLeft();\n            }\n\n            if ($window.width() < offset.left + picker.widget.outerWidth()) {\n                offset.right = $window.width() - offset.left - picker.width;\n                offset.left = 'auto';\n                picker.widget.addClass('pull-right');\n            } else {\n                offset.right = 'auto';\n                picker.widget.removeClass('pull-right');\n            }\n\n            if (placePosition === 'top') {\n                picker.widget.css({\n                    position: position,\n                    bottom: offset.bottom,\n                    top: 'auto',\n                    left: offset.left,\n                    right: offset.right\n                });\n            } else {\n                picker.widget.css({\n                    position: position,\n                    top: offset.top,\n                    bottom: 'auto',\n                    left: offset.left,\n                    right: offset.right\n                });\n            }\n        },\n\n        notifyChange = function (oldDate, eventType) {\n            if (moment(picker.date).isSame(moment(oldDate)) && !errored) {\n                return;\n            }\n            errored = false;\n            picker.element.trigger({\n                type: 'dp.change',\n                date: moment(picker.date),\n                oldDate: moment(oldDate)\n            });\n\n            if (eventType !== 'change') {\n                picker.element.change();\n            }\n        },\n\n        notifyError = function (date) {\n            errored = true;\n            picker.element.trigger({\n                type: 'dp.error',\n                date: moment(date, picker.format, picker.options.useStrict)\n            });\n        },\n\n        update = function (newDate) {\n            moment.locale(picker.options.language);\n            var dateStr = newDate;\n            if (!dateStr) {\n                dateStr = getPickerInput().val();\n                if (dateStr) {\n                    picker.date = moment(dateStr, picker.format, picker.options.useStrict);\n                }\n                if (!picker.date) {\n                    picker.date = moment();\n                }\n            }\n            picker.viewDate = moment(picker.date).startOf('month');\n            fillDate();\n            fillTime();\n        },\n\n        fillDow = function () {\n            moment.locale(picker.options.language);\n            var html = $('<tr>'), weekdaysMin = moment.weekdaysMin(), i;\n            if (picker.options.calendarWeeks === true) {\n                html.append('<th class=\"cw\">#</th>');\n            }\n            if (moment().localeData()._week.dow === 0) { // starts on Sunday\n                for (i = 0; i < 7; i++) {\n                    html.append('<th class=\"dow\">' + weekdaysMin[i] + '</th>');\n                }\n            } else {\n                for (i = 1; i < 8; i++) {\n                    if (i === 7) {\n                        html.append('<th class=\"dow\">' + weekdaysMin[0] + '</th>');\n                    } else {\n                        html.append('<th class=\"dow\">' + weekdaysMin[i] + '</th>');\n                    }\n                }\n            }\n            picker.widget.find('.datepicker-days thead').append(html);\n        },\n\n        fillMonths = function () {\n            moment.locale(picker.options.language);\n            var html = '', i, monthsShort = moment.monthsShort();\n            for (i = 0; i < 12; i++) {\n                html += '<span class=\"month\">' + monthsShort[i] + '</span>';\n            }\n            picker.widget.find('.datepicker-months td').append(html);\n        },\n\n        fillDate = function () {\n            if (!picker.options.pickDate) {\n                return;\n            }\n            moment.locale(picker.options.language);\n            var year = picker.viewDate.year(),\n                month = picker.viewDate.month(),\n                startYear = picker.options.minDate.year(),\n                startMonth = picker.options.minDate.month(),\n                endYear = picker.options.maxDate.year(),\n                endMonth = picker.options.maxDate.month(),\n                currentDate,\n                prevMonth, nextMonth, html = [], row, clsName, i, days, yearCont, currentYear, months = moment.months();\n\n            picker.widget.find('.datepicker-days').find('.disabled').removeClass('disabled');\n            picker.widget.find('.datepicker-months').find('.disabled').removeClass('disabled');\n            picker.widget.find('.datepicker-years').find('.disabled').removeClass('disabled');\n\n            picker.widget.find('.datepicker-days th:eq(1)').text(\n                months[month] + ' ' + year);\n\n            prevMonth = moment(picker.viewDate, picker.format, picker.options.useStrict).subtract(1, 'months');\n            days = prevMonth.daysInMonth();\n            prevMonth.date(days).startOf('week');\n            if ((year === startYear && month <= startMonth) || year < startYear) {\n                picker.widget.find('.datepicker-days th:eq(0)').addClass('disabled');\n            }\n            if ((year === endYear && month >= endMonth) || year > endYear) {\n                picker.widget.find('.datepicker-days th:eq(2)').addClass('disabled');\n            }\n\n            nextMonth = moment(prevMonth).add(42, 'd');\n            while (prevMonth.isBefore(nextMonth)) {\n                if (prevMonth.weekday() === moment().startOf('week').weekday()) {\n                    row = $('<tr>');\n                    html.push(row);\n                    if (picker.options.calendarWeeks === true) {\n                        row.append('<td class=\"cw\">' + prevMonth.week() + '</td>');\n                    }\n                }\n                clsName = '';\n                if (prevMonth.year() < year || (prevMonth.year() === year && prevMonth.month() < month)) {\n                    clsName += ' old';\n                } else if (prevMonth.year() > year || (prevMonth.year() === year && prevMonth.month() > month)) {\n                    clsName += ' new';\n                }\n                if (prevMonth.isSame(moment({y: picker.date.year(), M: picker.date.month(), d: picker.date.date()}))) {\n                    clsName += ' active';\n                }\n                if (isInDisableDates(prevMonth, 'day') || !isInEnableDates(prevMonth)) {\n                    clsName += ' disabled';\n                }\n                if (picker.options.showToday === true) {\n                    if (prevMonth.isSame(moment(), 'day')) {\n                        clsName += ' today';\n                    }\n                }\n                if (picker.options.daysOfWeekDisabled) {\n                    for (i = 0; i < picker.options.daysOfWeekDisabled.length; i++) {\n                        if (prevMonth.day() === picker.options.daysOfWeekDisabled[i]) {\n                            clsName += ' disabled';\n                            break;\n                        }\n                    }\n                }\n                row.append('<td class=\"day' + clsName + '\">' + prevMonth.date() + '</td>');\n\n                currentDate = prevMonth.date();\n                prevMonth.add(1, 'd');\n\n                if (currentDate === prevMonth.date()) {\n                    prevMonth.add(1, 'd');\n                }\n            }\n            picker.widget.find('.datepicker-days tbody').empty().append(html);\n            currentYear = picker.date.year();\n            months = picker.widget.find('.datepicker-months').find('th:eq(1)').text(year).end().find('span').removeClass('active');\n            if (currentYear === year) {\n                months.eq(picker.date.month()).addClass('active');\n            }\n            if (year - 1 < startYear) {\n                picker.widget.find('.datepicker-months th:eq(0)').addClass('disabled');\n            }\n            if (year + 1 > endYear) {\n                picker.widget.find('.datepicker-months th:eq(2)').addClass('disabled');\n            }\n            for (i = 0; i < 12; i++) {\n                if ((year === startYear && startMonth > i) || (year < startYear)) {\n                    $(months[i]).addClass('disabled');\n                } else if ((year === endYear && endMonth < i) || (year > endYear)) {\n                    $(months[i]).addClass('disabled');\n                }\n            }\n\n            html = '';\n            year = parseInt(year / 10, 10) * 10;\n            yearCont = picker.widget.find('.datepicker-years').find(\n                'th:eq(1)').text(year + '-' + (year + 9)).parents('table').find('td');\n            picker.widget.find('.datepicker-years').find('th').removeClass('disabled');\n            if (startYear > year) {\n                picker.widget.find('.datepicker-years').find('th:eq(0)').addClass('disabled');\n            }\n            if (endYear < year + 9) {\n                picker.widget.find('.datepicker-years').find('th:eq(2)').addClass('disabled');\n            }\n            year -= 1;\n            for (i = -1; i < 11; i++) {\n                html += '<span class=\"year' + (i === -1 || i === 10 ? ' old' : '') + (currentYear === year ? ' active' : '') + ((year < startYear || year > endYear) ? ' disabled' : '') + '\">' + year + '</span>';\n                year += 1;\n            }\n            yearCont.html(html);\n        },\n\n        fillHours = function () {\n            moment.locale(picker.options.language);\n            var table = picker.widget.find('.timepicker .timepicker-hours table'), html = '', current, i, j;\n            table.parent().hide();\n            if (picker.use24hours) {\n                current = 0;\n                for (i = 0; i < 6; i += 1) {\n                    html += '<tr>';\n                    for (j = 0; j < 4; j += 1) {\n                        html += '<td class=\"hour\">' + padLeft(current.toString()) + '</td>';\n                        current++;\n                    }\n                    html += '</tr>';\n                }\n            }\n            else {\n                current = 1;\n                for (i = 0; i < 3; i += 1) {\n                    html += '<tr>';\n                    for (j = 0; j < 4; j += 1) {\n                        html += '<td class=\"hour\">' + padLeft(current.toString()) + '</td>';\n                        current++;\n                    }\n                    html += '</tr>';\n                }\n            }\n            table.html(html);\n        },\n\n        fillMinutes = function () {\n            var table = picker.widget.find('.timepicker .timepicker-minutes table'), html = '', current = 0, i, j, step = picker.options.minuteStepping;\n            table.parent().hide();\n            if (step === 1)  {\n                step = 5;\n            }\n            for (i = 0; i < Math.ceil(60 / step / 4) ; i++) {\n                html += '<tr>';\n                for (j = 0; j < 4; j += 1) {\n                    if (current < 60) {\n                        html += '<td class=\"minute\">' + padLeft(current.toString()) + '</td>';\n                        current += step;\n                    } else {\n                        html += '<td></td>';\n                    }\n                }\n                html += '</tr>';\n            }\n            table.html(html);\n        },\n\n        fillSeconds = function () {\n            var table = picker.widget.find('.timepicker .timepicker-seconds table'), html = '', current = 0, i, j;\n            table.parent().hide();\n            for (i = 0; i < 3; i++) {\n                html += '<tr>';\n                for (j = 0; j < 4; j += 1) {\n                    html += '<td class=\"second\">' + padLeft(current.toString()) + '</td>';\n                    current += 5;\n                }\n                html += '</tr>';\n            }\n            table.html(html);\n        },\n\n        fillTime = function () {\n            if (!picker.date) {\n                return;\n            }\n            var timeComponents = picker.widget.find('.timepicker span[data-time-component]'),\n                hour = picker.date.hours(),\n                period = picker.date.format('A');\n            if (!picker.use24hours) {\n                if (hour === 0) {\n                    hour = 12;\n                } else if (hour !== 12) {\n                    hour = hour % 12;\n                }\n                picker.widget.find('.timepicker [data-action=togglePeriod]').text(period);\n            }\n            timeComponents.filter('[data-time-component=hours]').text(padLeft(hour));\n            timeComponents.filter('[data-time-component=minutes]').text(padLeft(picker.date.minutes()));\n            timeComponents.filter('[data-time-component=seconds]').text(padLeft(picker.date.second()));\n        },\n\n        click = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            picker.unset = false;\n            var target = $(e.target).closest('span, td, th'), month, year, step, day, oldDate = moment(picker.date);\n            if (target.length === 1) {\n                if (!target.is('.disabled')) {\n                    switch (target[0].nodeName.toLowerCase()) {\n                        case 'th':\n                            switch (target[0].className) {\n                                case 'picker-switch':\n                                    showMode(1);\n                                    break;\n                                case 'prev':\n                                case 'next':\n                                    step = dpGlobal.modes[picker.viewMode].navStep;\n                                    if (target[0].className === 'prev') {\n                                        step = step * -1;\n                                    }\n                                    picker.viewDate.add(step, dpGlobal.modes[picker.viewMode].navFnc);\n                                    fillDate();\n                                    break;\n                            }\n                            break;\n                        case 'span':\n                            if (target.is('.month')) {\n                                month = target.parent().find('span').index(target);\n                                picker.viewDate.month(month);\n                            } else {\n                                year = parseInt(target.text(), 10) || 0;\n                                picker.viewDate.year(year);\n                            }\n                            if (picker.viewMode === picker.minViewMode) {\n                                picker.date = moment({\n                                    y: picker.viewDate.year(),\n                                    M: picker.viewDate.month(),\n                                    d: picker.viewDate.date(),\n                                    h: picker.date.hours(),\n                                    m: picker.date.minutes(),\n                                    s: picker.date.seconds()\n                                });\n                                set();\n                                notifyChange(oldDate, e.type);\n                            }\n                            showMode(-1);\n                            fillDate();\n                            break;\n                        case 'td':\n                            if (target.is('.day')) {\n                                day = parseInt(target.text(), 10) || 1;\n                                month = picker.viewDate.month();\n                                year = picker.viewDate.year();\n                                if (target.is('.old')) {\n                                    if (month === 0) {\n                                        month = 11;\n                                        year -= 1;\n                                    } else {\n                                        month -= 1;\n                                    }\n                                } else if (target.is('.new')) {\n                                    if (month === 11) {\n                                        month = 0;\n                                        year += 1;\n                                    } else {\n                                        month += 1;\n                                    }\n                                }\n                                picker.date = moment({\n                                    y: year,\n                                    M: month,\n                                    d: day,\n                                    h: picker.date.hours(),\n                                    m: picker.date.minutes(),\n                                    s: picker.date.seconds()\n                                }\n                                );\n                                picker.viewDate = moment({\n                                    y: year, M: month, d: Math.min(28, day)\n                                });\n                                fillDate();\n                                set();\n                                notifyChange(oldDate, e.type);\n                            }\n                            break;\n                    }\n                }\n            }\n        },\n\n        actions = {\n            incrementHours: function () {\n                checkDate('add', 'hours', 1);\n            },\n\n            incrementMinutes: function () {\n                checkDate('add', 'minutes', picker.options.minuteStepping);\n            },\n\n            incrementSeconds: function () {\n                checkDate('add', 'seconds', 1);\n            },\n\n            decrementHours: function () {\n                checkDate('subtract', 'hours', 1);\n            },\n\n            decrementMinutes: function () {\n                checkDate('subtract', 'minutes', picker.options.minuteStepping);\n            },\n\n            decrementSeconds: function () {\n                checkDate('subtract', 'seconds', 1);\n            },\n\n            togglePeriod: function () {\n                var hour = picker.date.hours();\n                if (hour >= 12) {\n                    hour -= 12;\n                } else {\n                    hour += 12;\n                }\n                picker.date.hours(hour);\n            },\n\n            showPicker: function () {\n                picker.widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n                picker.widget.find('.timepicker .timepicker-picker').show();\n            },\n\n            showHours: function () {\n                picker.widget.find('.timepicker .timepicker-picker').hide();\n                picker.widget.find('.timepicker .timepicker-hours').show();\n            },\n\n            showMinutes: function () {\n                picker.widget.find('.timepicker .timepicker-picker').hide();\n                picker.widget.find('.timepicker .timepicker-minutes').show();\n            },\n\n            showSeconds: function () {\n                picker.widget.find('.timepicker .timepicker-picker').hide();\n                picker.widget.find('.timepicker .timepicker-seconds').show();\n            },\n\n            selectHour: function (e) {\n                var hour = parseInt($(e.target).text(), 10);\n                if (!picker.use24hours) {\n                    if (picker.date.hours() >= 12) {\n                        if (hour !== 12) {\n                            hour += 12;\n                        }\n                    } else {\n                        if (hour === 12) {\n                            hour = 0;\n                        }\n                    }\n                }\n                picker.date.hours(hour);\n                actions.showPicker.call(picker);\n            },\n\n            selectMinute: function (e) {\n                picker.date.minutes(parseInt($(e.target).text(), 10));\n                actions.showPicker.call(picker);\n            },\n\n            selectSecond: function (e) {\n                picker.date.seconds(parseInt($(e.target).text(), 10));\n                actions.showPicker.call(picker);\n            }\n        },\n\n        doAction = function (e) {\n            var oldDate = moment(picker.date),\n                action = $(e.currentTarget).data('action'),\n                rv = actions[action].apply(picker, arguments);\n            stopEvent(e);\n            if (!picker.date) {\n                picker.date = moment({y: 1970});\n            }\n            set();\n            fillTime();\n            notifyChange(oldDate, e.type);\n            return rv;\n        },\n\n        stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        },\n\n        keydown = function (e) {\n            if (e.keyCode === 27) { // allow escape to hide picker\n                picker.hide();\n            }\n        },\n\n        change = function (e) {\n            moment.locale(picker.options.language);\n            var input = $(e.target), oldDate = moment(picker.date), newDate = moment(input.val(), picker.format, picker.options.useStrict);\n            if (newDate.isValid() && !isInDisableDates(newDate) && isInEnableDates(newDate)) {\n                update();\n                picker.setValue(newDate);\n                notifyChange(oldDate, e.type);\n                set();\n            }\n            else {\n                picker.viewDate = oldDate;\n                picker.unset = true;\n                notifyChange(oldDate, e.type);\n                notifyError(newDate);\n            }\n        },\n\n        showMode = function (dir) {\n            if (dir) {\n                picker.viewMode = Math.max(picker.minViewMode, Math.min(2, picker.viewMode + dir));\n            }\n            picker.widget.find('.datepicker > div').hide().filter('.datepicker-' + dpGlobal.modes[picker.viewMode].clsName).show();\n        },\n\n        attachDatePickerEvents = function () {\n            var $this, $parent, expanded, closed, collapseData;\n            picker.widget.on('click', '.datepicker *', $.proxy(click, this)); // this handles date picker clicks\n            picker.widget.on('click', '[data-action]', $.proxy(doAction, this)); // this handles time picker clicks\n            picker.widget.on('mousedown', $.proxy(stopEvent, this));\n            picker.element.on('keydown', $.proxy(keydown, this));\n            if (picker.options.pickDate && picker.options.pickTime) {\n                picker.widget.on('click.togglePicker', '.accordion-toggle', function (e) {\n                    e.stopPropagation();\n                    $this = $(this);\n                    $parent = $this.closest('ul');\n                    expanded = $parent.find('.in');\n                    closed = $parent.find('.collapse:not(.in)');\n\n                    if (expanded && expanded.length) {\n                        collapseData = expanded.data('collapse');\n                        if (collapseData && collapseData.transitioning) {\n                            return;\n                        }\n                        expanded.collapse('hide');\n                        closed.collapse('show');\n                        $this.find('span').toggleClass(picker.options.icons.time + ' ' + picker.options.icons.date);\n                        if (picker.component) {\n                            picker.component.find('span').toggleClass(picker.options.icons.time + ' ' + picker.options.icons.date);\n                        }\n                    }\n                });\n            }\n            if (picker.isInput) {\n                picker.element.on({\n                    'click': $.proxy(picker.show, this),\n                    'focus': $.proxy(picker.show, this),\n                    'change': $.proxy(change, this),\n                    'blur': $.proxy(picker.hide, this)\n                });\n            } else {\n                picker.element.on({\n                    'change': $.proxy(change, this)\n                }, 'input');\n                if (picker.component) {\n                    picker.component.on('click', $.proxy(picker.show, this));\n                    picker.component.on('mousedown', $.proxy(stopEvent, this));\n                } else {\n                    picker.element.on('click', $.proxy(picker.show, this));\n                }\n            }\n        },\n\n        attachDatePickerGlobalEvents = function () {\n            $(window).on(\n                'resize.datetimepicker' + picker.id, $.proxy(place, this));\n            if (!picker.isInput) {\n                $(document).on(\n                    'mousedown.datetimepicker' + picker.id, $.proxy(picker.hide, this));\n            }\n        },\n\n        detachDatePickerEvents = function () {\n            picker.widget.off('click', '.datepicker *', picker.click);\n            picker.widget.off('click', '[data-action]');\n            picker.widget.off('mousedown', picker.stopEvent);\n            if (picker.options.pickDate && picker.options.pickTime) {\n                picker.widget.off('click.togglePicker');\n            }\n            if (picker.isInput) {\n                picker.element.off({\n                    'focus': picker.show,\n                    'change': change,\n                    'click': picker.show,\n                    'blur' : picker.hide\n                });\n            } else {\n                picker.element.off({\n                    'change': change\n                }, 'input');\n                if (picker.component) {\n                    picker.component.off('click', picker.show);\n                    picker.component.off('mousedown', picker.stopEvent);\n                } else {\n                    picker.element.off('click', picker.show);\n                }\n            }\n        },\n\n        detachDatePickerGlobalEvents = function () {\n            $(window).off('resize.datetimepicker' + picker.id);\n            if (!picker.isInput) {\n                $(document).off('mousedown.datetimepicker' + picker.id);\n            }\n        },\n\n        isInFixed = function () {\n            if (picker.element) {\n                var parents = picker.element.parents(), inFixed = false, i;\n                for (i = 0; i < parents.length; i++) {\n                    if ($(parents[i]).css('position') === 'fixed') {\n                        inFixed = true;\n                        break;\n                    }\n                }\n                return inFixed;\n            } else {\n                return false;\n            }\n        },\n\n        set = function () {\n            moment.locale(picker.options.language);\n            var formatted = '';\n            if (!picker.unset) {\n                formatted = moment(picker.date).format(picker.format);\n            }\n            getPickerInput().val(formatted);\n            picker.element.data('date', formatted);\n            if (!picker.options.pickTime) {\n                picker.hide();\n            }\n        },\n\n        checkDate = function (direction, unit, amount) {\n            moment.locale(picker.options.language);\n            var newDate;\n            if (direction === 'add') {\n                newDate = moment(picker.date);\n                if (newDate.hours() === 23) {\n                    newDate.add(amount, unit);\n                }\n                newDate.add(amount, unit);\n            }\n            else {\n                newDate = moment(picker.date).subtract(amount, unit);\n            }\n            if (isInDisableDates(moment(newDate.subtract(amount, unit))) || isInDisableDates(newDate)) {\n                notifyError(newDate.format(picker.format));\n                return;\n            }\n\n            if (direction === 'add') {\n                picker.date.add(amount, unit);\n            }\n            else {\n                picker.date.subtract(amount, unit);\n            }\n            picker.unset = false;\n        },\n\n        isInDisableDates = function (date, timeUnit) {\n            moment.locale(picker.options.language);\n            var maxDate = moment(picker.options.maxDate, picker.format, picker.options.useStrict),\n                minDate = moment(picker.options.minDate, picker.format, picker.options.useStrict);\n\n            if (timeUnit) {\n                maxDate = maxDate.endOf(timeUnit);\n                minDate = minDate.startOf(timeUnit);\n            }\n\n            if (date.isAfter(maxDate) || date.isBefore(minDate)) {\n                return true;\n            }\n            if (picker.options.disabledDates === false) {\n                return false;\n            }\n            return picker.options.disabledDates[date.format('YYYY-MM-DD')] === true;\n        },\n        isInEnableDates = function (date) {\n            moment.locale(picker.options.language);\n            if (picker.options.enabledDates === false) {\n                return true;\n            }\n            return picker.options.enabledDates[date.format('YYYY-MM-DD')] === true;\n        },\n\n        indexGivenDates = function (givenDatesArray) {\n            // Store given enabledDates and disabledDates as keys.\n            // This way we can check their existence in O(1) time instead of looping through whole array.\n            // (for example: picker.options.enabledDates['2014-02-27'] === true)\n\n            if (! givenDatesArray) return false;\n            var givenDatesIndexed = {}, givenDatesCount = 0, i;\n            for (i = 0; i < givenDatesArray.length; i++) {\n                if (moment.isMoment(givenDatesArray[i]) || givenDatesArray[i] instanceof Date) {\n                    dDate = moment(givenDatesArray[i]);\n                } else {\n                    dDate = moment(givenDatesArray[i], picker.format, picker.options.useStrict);\n                }\n                if (dDate.isValid()) {\n                    givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n                    givenDatesCount++;\n                }\n            }\n            if (givenDatesCount > 0) {\n                return givenDatesIndexed;\n            }\n            return false;\n        },\n\n        padLeft = function (string) {\n            string = string.toString();\n            if (string.length >= 2) {\n                return string;\n            }\n            return '0' + string;\n        },\n\n        getTemplate = function () {\n            var\n                headTemplate =\n                        '<thead>' +\n                            '<tr>' +\n                                '<th class=\"prev\">&lsaquo;</th><th colspan=\"' + (picker.options.calendarWeeks ? '6' : '5') + '\" class=\"picker-switch\"></th><th class=\"next\">&rsaquo;</th>' +\n                            '</tr>' +\n                        '</thead>',\n                contTemplate =\n                        '<tbody><tr><td colspan=\"' + (picker.options.calendarWeeks ? '8' : '7') + '\"></td></tr></tbody>',\n                template = '<div class=\"datepicker-days\">' +\n                    '<table class=\"table-condensed\">' + headTemplate + '<tbody></tbody></table>' +\n                '</div>' +\n                '<div class=\"datepicker-months\">' +\n                    '<table class=\"table-condensed\">' + headTemplate + contTemplate + '</table>' +\n                '</div>' +\n                '<div class=\"datepicker-years\">' +\n                    '<table class=\"table-condensed\">' + headTemplate + contTemplate + '</table>' +\n                '</div>',\n                ret = '';\n            if (picker.options.pickDate && picker.options.pickTime) {\n                ret = '<div class=\"bootstrap-datetimepicker-widget' + (picker.options.sideBySide ? ' timepicker-sbs' : '') + (picker.use24hours ? ' usetwentyfour' : '') + ' dropdown-menu\" style=\"z-index:9999 !important;\">';\n                if (picker.options.sideBySide) {\n                    ret += '<div class=\"row\">' +\n                       '<div class=\"col-sm-6 datepicker\">' + template + '</div>' +\n                       '<div class=\"col-sm-6 timepicker\">' + tpGlobal.getTemplate() + '</div>' +\n                     '</div>';\n                } else {\n                    ret += '<ul class=\"list-unstyled\">' +\n                        '<li' + (picker.options.collapse ? ' class=\"collapse in\"' : '') + '>' +\n                            '<div class=\"datepicker\">' + template + '</div>' +\n                        '</li>' +\n                        '<li class=\"picker-switch accordion-toggle\"><a class=\"btn\" style=\"width:100%\"><span class=\"' + picker.options.icons.time + '\"></span></a></li>' +\n                        '<li' + (picker.options.collapse ? ' class=\"collapse\"' : '') + '>' +\n                            '<div class=\"timepicker\">' + tpGlobal.getTemplate() + '</div>' +\n                        '</li>' +\n                   '</ul>';\n                }\n                ret += '</div>';\n                return ret;\n            }\n            if (picker.options.pickTime) {\n                return (\n                    '<div class=\"bootstrap-datetimepicker-widget dropdown-menu\">' +\n                        '<div class=\"timepicker\">' + tpGlobal.getTemplate() + '</div>' +\n                    '</div>'\n                );\n            }\n            return (\n                '<div class=\"bootstrap-datetimepicker-widget dropdown-menu\">' +\n                    '<div class=\"datepicker\">' + template + '</div>' +\n                '</div>'\n            );\n        },\n\n        dpGlobal = {\n            modes: [\n                {\n                    clsName: 'days',\n                    navFnc: 'month',\n                    navStep: 1\n                },\n                {\n                    clsName: 'months',\n                    navFnc: 'year',\n                    navStep: 1\n                },\n                {\n                    clsName: 'years',\n                    navFnc: 'year',\n                    navStep: 10\n                }\n            ]\n        },\n\n        tpGlobal = {\n            hourTemplate: '<span data-action=\"showHours\"   data-time-component=\"hours\"   class=\"timepicker-hour\"></span>',\n            minuteTemplate: '<span data-action=\"showMinutes\" data-time-component=\"minutes\" class=\"timepicker-minute\"></span>',\n            secondTemplate: '<span data-action=\"showSeconds\"  data-time-component=\"seconds\" class=\"timepicker-second\"></span>'\n        };\n\n        tpGlobal.getTemplate = function () {\n            return (\n                '<div class=\"timepicker-picker\">' +\n                    '<table class=\"table-condensed\">' +\n                        '<tr>' +\n                            '<td><a href=\"#\" class=\"btn\" data-action=\"incrementHours\"><span class=\"' + picker.options.icons.up + '\"></span></a></td>' +\n                            '<td class=\"separator\"></td>' +\n                            '<td>' + (picker.options.useMinutes ? '<a href=\"#\" class=\"btn\" data-action=\"incrementMinutes\"><span class=\"' + picker.options.icons.up + '\"></span></a>' : '') + '</td>' +\n                            (picker.options.useSeconds ?\n                                '<td class=\"separator\"></td><td><a href=\"#\" class=\"btn\" data-action=\"incrementSeconds\"><span class=\"' + picker.options.icons.up + '\"></span></a></td>' : '') +\n                            (picker.use24hours ? '' : '<td class=\"separator\"></td>') +\n                        '</tr>' +\n                        '<tr>' +\n                            '<td>' + tpGlobal.hourTemplate + '</td> ' +\n                            '<td class=\"separator\">:</td>' +\n                            '<td>' + (picker.options.useMinutes ? tpGlobal.minuteTemplate : '<span class=\"timepicker-minute\">00</span>') + '</td> ' +\n                            (picker.options.useSeconds ?\n                                '<td class=\"separator\">:</td><td>' + tpGlobal.secondTemplate + '</td>' : '') +\n                            (picker.use24hours ? '' : '<td class=\"separator\"></td>' +\n                            '<td><button type=\"button\" class=\"btn btn-primary\" data-action=\"togglePeriod\"></button></td>') +\n                        '</tr>' +\n                        '<tr>' +\n                            '<td><a href=\"#\" class=\"btn\" data-action=\"decrementHours\"><span class=\"' + picker.options.icons.down + '\"></span></a></td>' +\n                            '<td class=\"separator\"></td>' +\n                            '<td>' + (picker.options.useMinutes ? '<a href=\"#\" class=\"btn\" data-action=\"decrementMinutes\"><span class=\"' + picker.options.icons.down + '\"></span></a>' : '') + '</td>' +\n                            (picker.options.useSeconds ?\n                                '<td class=\"separator\"></td><td><a href=\"#\" class=\"btn\" data-action=\"decrementSeconds\"><span class=\"' + picker.options.icons.down + '\"></span></a></td>' : '') +\n                            (picker.use24hours ? '' : '<td class=\"separator\"></td>') +\n                        '</tr>' +\n                    '</table>' +\n                '</div>' +\n                '<div class=\"timepicker-hours\" data-action=\"selectHour\">' +\n                    '<table class=\"table-condensed\"></table>' +\n                '</div>' +\n                '<div class=\"timepicker-minutes\" data-action=\"selectMinute\">' +\n                    '<table class=\"table-condensed\"></table>' +\n                '</div>' +\n                (picker.options.useSeconds ?\n                    '<div class=\"timepicker-seconds\" data-action=\"selectSecond\"><table class=\"table-condensed\"></table></div>' : '')\n            );\n        };\n\n        picker.destroy = function () {\n            detachDatePickerEvents();\n            detachDatePickerGlobalEvents();\n            picker.widget.remove();\n            picker.element.removeData('DateTimePicker');\n            if (picker.component) {\n                picker.component.removeData('DateTimePicker');\n            }\n        };\n\n        picker.show = function (e) {\n            if (getPickerInput().prop('disabled')) {\n                return;\n            }\n            if (picker.options.useCurrent) {\n                if (getPickerInput().val() === '') {\n                    if (picker.options.minuteStepping !== 1) {\n                        var mDate = moment(),\n                        rInterval = picker.options.minuteStepping;\n                        mDate.minutes((Math.round(mDate.minutes() / rInterval) * rInterval) % 60).seconds(0);\n                        picker.setValue(mDate.format(picker.format));\n                    } else {\n                        picker.setValue(moment().format(picker.format));\n                    }\n                    notifyChange('', e.type);\n                }\n            }\n            // if this is a click event on the input field and picker is already open don't hide it\n            if (e && e.type === 'click' && picker.isInput && picker.widget.hasClass('picker-open')) {\n                return;\n            }\n            if (picker.widget.hasClass('picker-open')) {\n                picker.widget.hide();\n                picker.widget.removeClass('picker-open');\n            }\n            else {\n                picker.widget.show();\n                picker.widget.addClass('picker-open');\n            }\n            picker.height = picker.component ? picker.component.outerHeight() : picker.element.outerHeight();\n            place();\n            picker.element.trigger({\n                type: 'dp.show',\n                date: moment(picker.date)\n            });\n            attachDatePickerGlobalEvents();\n            if (e) {\n                stopEvent(e);\n            }\n        };\n\n        picker.disable = function () {\n            var input = getPickerInput();\n            if (input.prop('disabled')) {\n                return;\n            }\n            input.prop('disabled', true);\n            detachDatePickerEvents();\n        };\n\n        picker.enable = function () {\n            var input = getPickerInput();\n            if (!input.prop('disabled')) {\n                return;\n            }\n            input.prop('disabled', false);\n            attachDatePickerEvents();\n        };\n\n        picker.hide = function () {\n            // Ignore event if in the middle of a picker transition\n            var collapse = picker.widget.find('.collapse'), i, collapseData;\n            for (i = 0; i < collapse.length; i++) {\n                collapseData = collapse.eq(i).data('collapse');\n                if (collapseData && collapseData.transitioning) {\n                    return;\n                }\n            }\n            picker.widget.hide();\n            picker.widget.removeClass('picker-open');\n            picker.viewMode = picker.startViewMode;\n            showMode();\n            picker.element.trigger({\n                type: 'dp.hide',\n                date: moment(picker.date)\n            });\n            detachDatePickerGlobalEvents();\n        };\n\n        picker.setValue = function (newDate) {\n            moment.locale(picker.options.language);\n            if (!newDate) {\n                picker.unset = true;\n                set();\n            } else {\n                picker.unset = false;\n            }\n            if (!moment.isMoment(newDate)) {\n                newDate = (newDate instanceof Date) ? moment(newDate) : moment(newDate, picker.format, picker.options.useStrict);\n            } else {\n                newDate = newDate.locale(picker.options.language);\n            }\n            if (newDate.isValid()) {\n                picker.date = newDate;\n                set();\n                picker.viewDate = moment({y: picker.date.year(), M: picker.date.month()});\n                fillDate();\n                fillTime();\n            }\n            else {\n                notifyError(newDate);\n            }\n        };\n\n        picker.getDate = function () {\n            if (picker.unset) {\n                return null;\n            }\n            return moment(picker.date);\n        };\n\n        picker.setDate = function (date) {\n            var oldDate = moment(picker.date);\n            if (!date) {\n                picker.setValue(null);\n            } else {\n                picker.setValue(date);\n            }\n            notifyChange(oldDate, 'function');\n        };\n\n        picker.setDisabledDates = function (dates) {\n            picker.options.disabledDates = indexGivenDates(dates);\n            if (picker.viewDate) {\n                update();\n            }\n        };\n\n        picker.setEnabledDates = function (dates) {\n            picker.options.enabledDates = indexGivenDates(dates);\n            if (picker.viewDate) {\n                update();\n            }\n        };\n\n        picker.setMaxDate = function (date) {\n            if (date === undefined) {\n                return;\n            }\n            if (moment.isMoment(date) || date instanceof Date) {\n                picker.options.maxDate = moment(date);\n            } else {\n                picker.options.maxDate = moment(date, picker.format, picker.options.useStrict);\n            }\n            if (picker.viewDate) {\n                update();\n            }\n        };\n\n        picker.setMinDate = function (date) {\n            if (date === undefined) {\n                return;\n            }\n            if (moment.isMoment(date) || date instanceof Date) {\n                picker.options.minDate = moment(date);\n            } else {\n                picker.options.minDate = moment(date, picker.format, picker.options.useStrict);\n            }\n            if (picker.viewDate) {\n                update();\n            }\n        };\n\n        init();\n    };\n\n    $.fn.datetimepicker = function (options) {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data('DateTimePicker');\n            if (!data) {\n                $this.data('DateTimePicker', new DateTimePicker(this, options));\n            }\n        });\n    };\n\n    $.fn.datetimepicker.defaults = {\n        format: false,\n        pickDate: true,\n        pickTime: true,\n        useMinutes: true,\n        useSeconds: false,\n        useCurrent: true,\n        calendarWeeks: false,\n        minuteStepping: 1,\n        minDate: moment({y: 1900}),\n        maxDate: moment().add(100, 'y'),\n        showToday: true,\n        collapse: true,\n        language: moment.locale(),\n        defaultDate: '',\n        disabledDates: false,\n        enabledDates: false,\n        icons: {},\n        useStrict: false,\n        direction: 'auto',\n        sideBySide: false,\n        daysOfWeekDisabled: [],\n        widgetParent: false\n    };\n}));\n"]}